name: Build and deploy - Wroconsult App
on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build ‚õè
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
      - name: Install dependencies
        run: npm ci
      - name: Build dependencies
        run: npm run build
      - name: Archive production artifact
        uses: actions/upload-artifact@main
        with:
          name: build
          path: build
  deploy:
    name: Deploy üöÄ
    needs: build
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout repository
        uses: actions/checkout@main
      - name: Download artifact
        uses: actions/download-artifact@main
        with: 
          name: public
          path: public
      - name: FTP Deploy
        # You may pin to the exact commit or the version.
        # uses: SamKirkland/FTP-Deploy-Action@d2724c6194d42ae5d4d042070d51d23cbc6ad83f
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          # ftp server
          server: ${{ secrets.FTP_HOST }}
          # ftp username
          username: ${{ secrets.FTP_USER }}
          # ftp password
          password: ${{ secrets.FTP_PASSWORD }}
          # Server port to connect to (read your web hosts docs)
          port: 21
          # protocol to deploy with - ftp, ftps, or ftps-legacy
          #protocol: # optional
          # Folder to upload from, must end with trailing slash /
          local-dir: public/
          # Path to upload to on the server. Must end with trailing slash /
          #server-dir: # optional
          # Path and name of the state file - this file is used to track which files have been deployed
          #state-name: # optional
          # Prints which modifications will be made with current config options, but doesnt actually make any changes
          #dry-run: # optional
          # Deletes ALL contents of server-dir, even items in excluded with exclude argument
          #dangerous-clean-slate: # optional
          # An array of glob patterns, these files will not be included in the publish/delete process
          #exclude:
          # How verbose should the information be - minimal, standard, or verbose
          #log-level: # optional
          # strict or loose
          #security: # optional
  notification:
    name: Notification üîî
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Discord Webhook Notify
        # You may pin to the exact commit or the version.
        # uses: rjstone/discord-webhook-notify@89b0bf43c2c8514f70d0dcba4a706b904e8a3112
        uses: rjstone/discord-webhook-notify@v1.0.4
        with:
          # Discord webhook URL. Should be stored in a secret and inserted as a context expression.
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          # Severity level - info, warn, or error
          severity: info
          # Embed notification message. Use context expressions and environment variables to provide information. Default provides branch and user info.
          description: The new update has been approved and implemented on the server.
          # Footer for the embed. Defaults to severity.
          footer: Maintenance information
          # Username to display in discord.
          username: Deployment Status [BOT]
          color: '#00D8FF'
          # URL to png of discord avatar to use. Default is the GitHub monochrome mark cat logo.
          avatarUrl: https://cdn.freebiesupply.com/logos/large/2x/react-1-logo-png-transparent.png
